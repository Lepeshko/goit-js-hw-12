import{a as u,S as f,i as y}from"./assets/vendor-b0d10f48.js";(function(){const s=document.createElement("link").relList;if(s&&s.supports&&s.supports("modulepreload"))return;for(const e of document.querySelectorAll('link[rel="modulepreload"]'))l(e);new MutationObserver(e=>{for(const i of e)if(i.type==="childList")for(const h of i.addedNodes)h.tagName==="LINK"&&h.rel==="modulepreload"&&l(h)}).observe(document,{childList:!0,subtree:!0});function t(e){const i={};return e.integrity&&(i.integrity=e.integrity),e.referrerPolicy&&(i.referrerPolicy=e.referrerPolicy),e.crossOrigin==="use-credentials"?i.credentials="include":e.crossOrigin==="anonymous"?i.credentials="omit":i.credentials="same-origin",i}function l(e){if(e.ep)return;e.ep=!0;const i=t(e);fetch(e.href,i)}})();const L="44048092-3090edf6b3c3e0216bf005362",b="https://pixabay.com/api/";class c{constructor(){return c.instance||(this.apiKey=L,this.baseUrl=b,c.instance=this),c.instance}async fetchImages(s,t=1,l=15){try{return(await u.get(this.baseUrl,{params:{key:this.apiKey,q:s,image_type:"photo",per_page:l,page:t}})).data}catch{throw new Error("Failed to fetch images. Please try again later.")}}}const p=new c,g=p.fetchImages.bind(p);function m(n,s){const t=n.map(e=>`
        <li class="gallery-item">
            <a class="gallery-link" href="${e.largeImageURL}">
                <div class="full-image" class="loader">
                    <img class="gallery-image" src="${e.webformatURL}" alt="${e.tags}">
                    <ul class="image-button">
                        <li><p class="info-name">Likes</p><p>${e.likes}</p></li>
                        <li><p class="info-name">Views</p><p>${e.views}</p></li>
                        <li><p class="info-name">Comments</p><p>${e.comments}</p></li>
                        <li><p class="info-name">Downloads</p><p>${e.downloads}</p></li>
                    </ul>
                </div>
            </a>
        </li>
      `).join("");s.insertAdjacentHTML("beforeend",t),new f(".gallery a",{captionsData:"alt",captionDelay:250}).refresh()}function o(n,s){y[s]({message:n,messageColor:"white",position:"bottomRight",backgroundColor:"red"})}const w=document.querySelector("form"),d=document.querySelector(".gallery"),r=document.querySelector(".loader"),a=document.querySelector(".load-button");class S{constructor(){this.page=1,this.perPage=15,this.searchData="",this.totalHits=0,w.addEventListener("submit",this.handleSearch.bind(this)),a.addEventListener("click",this.loadMoreImages.bind(this)),a.classList.add("is-hidden"),r.classList.add("is-hidden")}async handleSearch(s){if(s.preventDefault(),d.innerHTML="",this.page=1,this.searchData=s.target.elements.search_input.value.trim(),this.searchData===""){o("Please enter a search term.","warning");return}r.classList.remove("is-hidden"),a.classList.add("is-hidden");try{const t=await g(this.searchData,this.page,this.perPage);if(r.classList.add("is-hidden"),this.totalHits=t.totalHits,t.totalHits===0){o("Sorry, there are no images matching your search query. Please try again!","error");return}m(t.hits,d),t.totalHits>this.perPage?a.classList.remove("is-hidden"):a.classList.add("is-hidden")}catch{r.classList.add("is-hidden"),o("An error occurred while fetching images. Please try again later.","error")}finally{s.target.reset()}}async loadMoreImages(){try{this.page+=1,r.classList.remove("is-hidden"),a.classList.add("is-hidden");const s=await g(this.searchData,this.page,this.perPage);if(r.classList.add("is-hidden"),s.hits.length===0){o("No more images to load.","info"),a.classList.add("is-hidden");return}m(s.hits,d),this.page*this.perPage>=this.totalHits?(a.classList.add("is-hidden"),o("You have reached the end of the search results.","info")):a.classList.remove("is-hidden"),this.smoothScroll()}catch{r.classList.add("is-hidden"),o("An error occurred while fetching images. Please try again later.","error")}}smoothScroll(){const{height:s}=d.firstElementChild.getBoundingClientRect();window.scrollBy({top:s*2,behavior:"smooth"})}}new S;
//# sourceMappingURL=commonHelpers.js.map
